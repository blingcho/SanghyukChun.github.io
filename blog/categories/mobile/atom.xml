<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mobile | README]]></title>
  <link href="http://SanghyukChun.github.io/blog/categories/mobile/atom.xml" rel="self"/>
  <link href="http://SanghyukChun.github.io/"/>
  <updated>2016-08-16T09:12:50+09:00</updated>
  <id>http://SanghyukChun.github.io/</id>
  <author>
    <name><![CDATA[Sanghyuk Chun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[모바일 시대 Platform에 대한 고찰]]></title>
    <link href="http://SanghyukChun.github.io/77/"/>
    <updated>2014-10-10T02:27:00+09:00</updated>
    <id>http://SanghyukChun.github.io/77</id>
    <content type="html"><![CDATA[<p>얼마 전 MS에서 윈도우10의 preview를 발표하였다. <a href="http://www.bloter.net/archives/208421">블로터 기사</a>를 참고하면 알 수 있 듯, 아직 테크니컬 프리뷰 단계이기는 하지만 MS가 어떤 철학을 가지고 이런 운영체제를 디자인했는가는 어렵지 않게 예상할 수 있다. 스마트폰과 태블릿 데스크톱 그리고 콘솔 등에 이르는 수 많은 isolate 되어있는 기기들을 통합으로 관리할 수 있는 하나의 거대한 통합 플랫폼을 만들어내겠다라는 의지가 바로 그것이다. <a class="red tip" title="소문에 의하면 95,98 버전 확인을 windows 9가 포함이 되었느냐 아니냐로 하기 떄문이라고.">왜 8다음에 10이냐는 이슈는 넘어가고</a> 과연 MS의 이런 행보가 어떤 파장을 일으킬 수 있을지에 대해 생각해보고 싶어졌다.</p>
<h3>모바일 모바일 모바일</h3>
<p>그래 바야흐로 모바일의 시대가 도래하였다고 해도 과언이 아니다. 내 블로그에 붙여놓은 google analytics를 보니까 내 블로그는 PC가 약 75%, 모바일이 약 18%, 그리고 태블릿이 약 7% 정도의 접속률을 보이고 있다. 즉, 내 블로그를 읽는 사람들의 행동 양식만 보고 비교를 하자면 아직은 PC로 웹을 보는 사람들이 모바일이나 태블릿 (합쳐서 모바일이라 하자) 으로 웹을 보는 사람들에 비해 약 5배 정도 많다. 그러나 이것은 내 블로그가 특수한 환경에 처한 것이고 (대부분의 유입이 구글 검색이고 키워드가 머신러닝이니까..) 실제 전체 웹을 보게 되면 상황이 많이 달라진다. StatCounter의 <a href="http://gs.statcounter.com/#all-comparison-ww-monthly-201309-201409">global stats page</a>를 참고해보면 모바일의 비중이 거의 30% 가까이를 차지하고 있으며, 태블릿까지 포함하면 약 37~8% 정도에 육박한다는 사실을 알 수 있다.</p>
<p><img src="/images/post/77-1.png" width="500"></p>
<p>이 속도가 엄청나게 빠르게 증가하고 있다는 사실이 바로 그것인데, 불과 1년 사이에 모바일 뷰가 17%에서 거의 30%까지 증가한 것이다. 거의 75% 가까이 증가한 셈이다. 지역을 한국으로 좁혀서 보게 되면 (<a href="http://gs.statcounter.com/#all-comparison-KR-monthly-201309-201409">링크</a>) 우리는 상대적으로 태블릿의 점유율은 엄청 낮은 대신, 모바일의 비중이 매우 높다는 것을 알 수 있다.</p>
<p><img src="/images/post/77-2.png" width="500"></p>
<p>그리고 어느 정도 1년 동안의 변화 정도가 일정한 것을 알 수 있다. 경험적으로 비춰보았을 때, PC를 거의 사용하지 않고 모바일로만 보는 사람들이 그만큼 많아졌다는 뜻이 아닐까라고 생각된다.</p>
<p>그리고 또 이렇게 general하게 전체 웹 view만 보는 것이 아니라 큰 서비스로 시선을 돌리면 또 얘기가 달라진다. <a href="http://www.nasmedia.co.kr/">나스미디어</a>의 <a href="http://lib.nasmedia.co.kr/file/534f5d4242381">2014년 NPR (Netizen Profile Research)</a> 에 의하면, PC 인터넷 이용자의 스마트폰 이용률이 현재 88.1%에 육박하며 이는 전년 대비 11.5% 상승한 결과라고 한다. 그리고 사실 정말 재미있는 지표는 11쪽에 있는 SNS 접속 디바이스인데, 싸이, 미투, 구글플러스와 같은 마이너한 서비스는 제외하고 (심지어 미투데이는 올해 서비스를 종로했다 ㅠㅠ) 아래에서 볼 수 있듯 모바일의 비중이 매우 높다는 것을 알 수 있다.</p>
<p><img src="/images/post/77-3.png" width="600"></p>
<p>즉, 이제 모바일은 절대로 무시할 수 없는 현실이라는 것을 데이터가 보여주고 있는 것이다.</p>
<h3>모바일 사용자, PC 사용자</h3>
<p>그런데 내 생각에 저런 수치들이 제대로 반영하지 못하는 하나의 현실이 더 있다. 바로 극명하게 다른 PC 사용자와 모바일 사용자들의 성향이다. 모바일 사용자는 처음 몇 번의 시도 후 제대로 동작하지 않는 것 같다고 느끼면 그냥 서비스에서 이탈해버리고 다시 돌아오지 않는 경우가 많다. 즉, 이탈률이 매우 높다. 따라서 이탈을 하지 않도록 사용자에게 빠르게 지속적으로 동작을 유도해야한다. 또한 PC에 비해 모바일의 화면이 더 작아 너무 많은 정보를 한 번에 받는 것에 대해 부담을 느낀다. 마지막으로 그 둘의 역할이 많이 분리가 되었다. 간단한 검색이나 기사 읽기 등 '이건 내가 모바일로도 할 수 있겠다' 하는 일들이라면 모바일에서 처리하는 유저의 비중이 높은 반면, 복잡한 멀티프로세싱을 해야하는 경우라면 PC가 더 사용률이 높다. 다시 말해, PC와 모바일은 비슷해보일지 몰라도 자세히 보면 완전히 다른 성향을 가지고 있는 별개의 플랫폼이다. 즉, 어떤 서비스를 개발했을 때, 완전히 다른 두 개의 플랫폼에서 이 서비스를 동시에 지원할지 말아야할지 염두해두어야하며, 만약 동시에 지원하는 경우 이 작업을 꼭 PC앞에서 해야하는 강력한 motive 가 있는게 아니라면 많은 사람들은 모바일로 그 서비스를 접근하려 할 것이라는 말이다. 그게 웹이되었거나 앱이 되었거나.</p>
<h3>Mobile First</h3>
<p>Start up 쪽에서 흔히 많이 하는 말 중에 Lean Start up 이라거나, Mobile first 등의 용어가 있다. [Mobile first: <a href="http://www.lukew.com/ff/entry.asp?933">링크1</a>, <a href="http://study.gnuboard.org/wiki/read/studygroup/rwd/Mobile-First-and-RWD">링크2</a>, <a href="http://h30458.www3.hp.com/kr/ko/discover-performance/it-execs/2012/oct/1243352.html">링크3</a>], [Lean Startup: <a href="http://theleanstartup.com/">링크1</a>, <a href="http://www.jimmyrim.com/153">링크2</a>, <a href="http://platum.kr/archives/tag/%EB%A6%B0%EC%8A%A4%ED%83%80%ED%8A%B8%EC%97%85">링크3</a>]</p>
<p>Mobile first는 간단히 얘기하면 처음 시작점을 무조건 모바일에 맞춰서 시작을 하라는 의미이다. 이유는 (1) 모바일이 점점 거대해지고 있으며 (2) 모바일 개발에만 치중하면서 적은 리소스를 한 곳에 집중할 수 있을 뿐더라 (3) 모바일에 포함되는 많은 기술들이 (GPS, Multi-touch UI 등) 기존 웹에서 사용되는 javascript 기반의 PC-based Web보다 더 많은 사용자 경험을 줄 수 있기 때문이라는 것이다. 내 생각에도 지금 같은 서비스를 사용하더라도 많은 사람들이 mobile로 그 서비스를 access하는 경우가 점점 늘어나고 있으며, 만약 모바일과 웹이 있을 때 하나를 선택하라고 했을 때 모바일로 접속을 하는 사람들이 많아지고 있는 지금, 웹을 먼저 개발하기 보다는 모바일에 먼저 치중한 이후 나중에 웹으로 확장을 하는 편이 더 좋다고 생각된다. (때에 따라서는 PC 지원을 아예 하지 않는 경우도 존재한다) 하지만 Mobile first를 할 때 주의해야할 점들이 몇 가지가 있는데, 가장 중요한 것은 품질관리이다. 모바일은 아주 빠르게 변화하는 곳이기 떄문에 더 빠른 업데이트와 대응이 필수적인데, 자칫잘못했다가는 제품의 품질이 떨어지고 앱의 평점과 리뷰가 부정적인 방향으로 바뀔 수 있기 때문이다. 또한 현재 모바일 앱의 특성상 나쁜 리뷰와 별점은 추가적인 앱 다운로드에 악영향을 미친다. 따라서 이 <a href="http://h30458.www3.hp.com/kr/ko/discover-performance/it-execs/2012/oct/1243352.html">Mobile first: 링크3</a>에서 제안하는 방법은 애자일 프로세스이다. 기존의 느린 의사결정 방식으로 모바일 애플리케이션을 대해서는 안된다는 의미이다. 더 빠르고 더 기민하게 움직여야만한다. 그리고 난 그런 흐름 속에서 Mobile first가 Lean startup과의 시너지를 도모할 수 있다고 본다. 하지만 애자일을 도입해도 근본적인 제약조건이 존재하는데, (1) 작은 화면, (2) 네트워크 품질 (3) 기기의 성능 이 그것이다. 이 부분에 대해서는 뒤에 더 자세히 다뤄보도록하자.</p>
<p>Lean startup은 일종의 프로덕트 개발 방법론 중 하나인데, 애자일한 개발, 완성되지 않은 프로토타입의 시장 진출, 고객과의 긴밀한 피드백루프 구축 등으로 구성이 되어있다. 기본적인 아이디어는 waterfall 식의 느린 의사결정으로 회사를 운영하거나, 제품을 개발하지 말고, 최대한 lean하게, 혹은 애자일하게 일단 빨리 빨리 무엇을 만들어보고 시장의 반응을 보고 버리거나 다른 식으로 develop을 하라는 얘기이다. 때문에 방금 전에 언급했던 Mobile first와 상당한 시너지를 일으킬 수 있는데 기본적으로 애자일 방법론을 기반으로 하기 때문에 위에서 언급했던 빠른 대응이나 지속적인 배포를 하기에 매우 용이하며, 프로토타입 단계에서 시장에 대한 가설을 테스트할 때에도 모바일에서 먼저 가설을 테스트해보고 더 크기를 키워도 되겠다는 결정을 내리고 나서 웹이나 다른 플랫폼으로의 확장을 결정하라는 것이다. 린스타트업에 대해 파고들어가기 시작하면 너무나 많은 얘기를 해야하기 때문에 깊은 얘기는 가급적 피하도록 하겠지만, 분명 린스타트업은 모바일퍼스트와 궁합이 잘 맞는 조합임에 분명하다.</p>
<p>모바일퍼스트니, 린스타트업이니 하는 거창한 얘기를 하지 않더라도 내가 어떤 서비스를 만든다고 하면 이제는 항상 모바일에 대한 생각을 하지 않을 수 없다. 이 서비스를 지금은 모바일에서 지원할 예정이 없더라도 추후 모바일에서도 지원할지, 아니면 모바일에서만 지원할지 나중에 웹으로 확장을 할 것인지. 네이티브 앱으로 만들 것인지 아니면 웹으로 만들어서 모바일 뷰를 따로 만들 것인지. 모바일 뷰를 따로 만들 것인지 아니면 반응형으로 만들어서 하나의 통합 url로 관리를 하게 할 것인지. 이 모든 것들을 반드시 처음에 한 번 쯤은 생각을 해야만 한다.</p>
<h3>모바일의 제약조건</h3>
<p>그런데 모바일이 만능 키인 것은 아니다. 모바일은 근본적으로 하드웨어에서부터 기인하는 여러 문제점들을 떠안고 있기 때문이다. (1) 작은 화면 (2) 모바일 네트워크 (3) 기기의 성능이 그것이었다.</p>
<p>먼저 작은 화면은 UI적인 측면에서 엄청난 변혁을 일으켰다. 기존의 PC-based 서비스들은 (웹 기반인 경우) 처음 보이는 웹에 굉장히 많은 정보들을 넣고 사용자가 그 정보들을 알아서 고르게하는 방식을 선택했었다면, 모바일로 넘어오고 나서는 그 화면의 크기가 어마어마하게 줄었기 때문에 (간단하게 생각해보면 22인치 모니터에서 5.5인치 아이폰6플러스는 화면의 크기가 16배 차이가 난다.) 처음 보여주는 정보의 양도 제한적일 수밖에 없고 또한 UI 역시 2차원적인 UI가 아니라 스크롤이 들어가는 1차원 세로형 UI가 강제 된다. 때문에 모바일에 익숙하지 않은 상태에서 UX를 web을 만들듯 디자인을 하게 되면 사용자 입장에서는 별로 좋지 못한 UX를 경험할 수 밖에 없는 것이다. 하지만 화면이 작기 때문에 채워야하는 정보의 양도 적고, 내가 어떤 정보를 보여줘야 더 효율적일지 더 고민할 수 있는 여지가 있기 때문에 오히려 작은 화면이 더 좋은 서비스를 개발하는데에 도움이 된다는 주장도 존재한다.</p>
<p>다음으로 모바일 네트워크의 문제는 LTE로 넘어오면서 거의 해결이 되었다. 하지만 아직도 다른 국가들을 봤을 때 3G 이상의 망이 이렇게 보급이 된 곳은 많이 없고, 또한 모바일 유저는 데이터 소모에 매우 민감하기 때문에 앱을 설계할 때 네트워크 리소스에 대한 고민을 해야할 필요가 여전히 존재한다.</p>
<p>마지막으로 기기의 성능 문제가 있다. 이건 꽤나 치명적인데, Web을 생각해보자. 웹은 서버에서 모든 로직이 실행되고 사용자 컴퓨터의 성능에 좌우되는 것은 랜더링을 하는 브라우져 뿐이었다. 즉, 동적으로 무언가를 생성하는 스크립트 등의 속도가 다소 느려질 수 있는 문제를 제외하면 대부분의 속도에 관련된 문제는 서버side에서 해결해야하는 경우가 대다수였다. 하지만 모바일로 넘어오면서 얘기가 완전히 달라졌는데, 먼저 PC보다 브라우져의 성능이 크게 저하되었고, 스마트폰의 여러 리소스를 사용하는 일은 그만큼 배터리 소모를 빠르게하고 스마트폰의 성능을 저하하는 요소가 되었기 때문에 상당히 많은 부분에서 희생을 해야한다. 물론 서비스를 한다는 것 부터가 이미 서버를 사용한다는 의미가 되기 때문에 크게 문제가 없을 수도 있지만, 이는 분명 PC에 비해 어마어마한 단점이다.</p>
<h3>결론1: 모바일을 대하는 우리의 자세</h3>
<p>이제 모바일은 절대로 무시할 수 없는 거대한 공룡이 되어가고 있다. 새로운 서비스를 시작할 때 거의 99.9% 이상 모바일퍼스트를 선택해야하며 이에 따라 필연적으로 애자일방법론, 더 나아가 린스타트업을 적용해야할 필요가 있다. 그러나 근본적으로 모바일의 제약조건이 존재한다는 점은 꽤나 치명적인데, 그만큼 한 서비스를 만들 때 처음부터 모바일에 모든 리소스를 부어가며 시작할 필요가 있다는 것이다. 그리고 모바일 이외의 환경으로 확장하는 것도 항상 염두를 하며 서비스 아키텍쳐 설계를 할 때 이에 대한 문제를 항상 생각을 할 필요가 있을 것이다.</p>
<h3>결론2: 통합 플랫폼을 만드려는 MS의 행보는 어떤 결과를 가져올까</h3>
<p>앞서 설명했듯 MS는 새로운 통합 플랫폼에 대한 원대한 야망을 가지고있다. 하지만 나는 이것이 별로 효과가 없을 것이라고 생각하는데, (1) 모바일과 웹을 동시에 지원하는 것이 아니라 어차피 모바일에만 집중해야하는데 두 개를 전부 고려해서 설계를 하면 리소스가 분산이 되기 쉽다. (2) 모바일과 PC의 사용자 성향은 극도로 다르기 때문에 PC에서 주었던 경험을 모바일에서 그대로 주는 것이 항상 능사는 아니다. (3) PC와 모바일 둘 다 이미 어느정도 정형화된 경험이 존재하는데, 그 경험을 깨어가면서까지 새로운 윈도우를 사용하게할 유인요소가 보이지 않는다. 결론적으로 서비스를 만드는 입장에서 결론적으로는 모바일과 PC는 함께 가져가야할지 모르지만, 처음 시작하는 단계에서부터 반드시 같이 가져가야하는 것은 아니기 때문에 나는 윈도우10 역시 좋은 평가를 받지 못할 것이라 생각된다.</p>

<h3>References</h3>
<ul>
  <li>StatCounter <a href="http://gs.statcounter.com/#all-comparison-ww-monthly-201309-201409">global stats page</a></li>
  <li><a href="http://www.nasmedia.co.kr/">나스미디어</a>의 <a href="http://lib.nasmedia.co.kr/file/534f5d4242381">2014년 NPR (Netizen Profile Research)</a></li>
</ul>
]]></content>
  </entry>
  
</feed>
